{"version":3,"file":"commonHelpers2.js","sources":["../src/JS/2-snackbar.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nconst startButton = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\nlet countdownInterval = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future'\n            });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startButton.disabled = false;\n        }\n    },\n};\n\nflatpickr(dateTimePicker, options);\n\nconst convertMs = ms => {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % day) % hour / minute);\n    const seconds = Math.floor(((ms % day) % hour % minute) / second);\n\n    return { days, hours, minutes, seconds };\n};\n\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\nconst updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n    daysValue.textContent = days;\n    hoursValue.textContent = addLeadingZero(hours);\n    minutesValue.textContent = addLeadingZero(minutes);\n    secondsValue.textContent = addLeadingZero(seconds);\n};\n\nconst startTimer = () => {\n    countdownInterval = setInterval(() => {\n        const now = new Date();\n        const timeLeft = userSelectedDate - now;\n\n        if (timeLeft <= 0) {\n            clearInterval(countdownInterval);\n            updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            dateTimePicker.disabled = false;\n            return;\n        }\n\n        const timeComponents = convertMs(timeLeft);\n        updateTimerDisplay(timeComponents);\n    }, 1000);\n};\n\nstartButton.addEventListener('click', () => {\n    if (!userSelectedDate) {\n        return;\n    }\n\n    startButton.disabled = true;\n    dateTimePicker.disabled = true;\n    startTimer();\n});\n\n// Обробка форми для створення промісу\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const delay = parseInt(form.elements.delay.value);\n    const state = form.elements.state.value;\n\n    createPromise(delay, state)\n        .then(delay => {\n            iziToast.success({\n                title: 'Success',\n                message: `✅ Fulfilled promise in ${delay}ms`\n            });\n        })\n        .catch(delay => {\n            iziToast.error({\n                title: 'Error',\n                message: `❌ Rejected promise in ${delay}ms`\n            });\n        });\n});\n\nfunction createPromise(delay, state) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n}\n"],"names":["userSelectedDate","startButton","dateTimePicker","daysValue","hoursValue","minutesValue","secondsValue","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","startTimer","timeLeft","timeComponents","form","event","delay","state","createPromise","resolve","reject"],"mappings":"2GAKA,IAAIA,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5D,IAAIC,EAAoB,KAExB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACDV,EAAY,SAAW,KAEvBD,EAAmBU,EACnBT,EAAY,SAAW,GAE9B,CACL,EAEAW,EAAUV,EAAgBM,CAAO,EAEjC,MAAMK,EAAYC,GAAM,CAMpB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,MAAO,KAAO,GAAM,EAC/CI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAO,IAAU,GAAM,EAEhE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,EAEMC,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEvDC,EAAqB,CAAC,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC9Df,EAAU,YAAcY,EACxBX,EAAW,YAAce,EAAeH,CAAK,EAC7CX,EAAa,YAAcc,EAAeF,CAAO,EACjDX,EAAa,YAAca,EAAeD,CAAO,CACrD,EAEMI,EAAa,IAAM,CACrBf,EAAoB,YAAY,IAAM,CAElC,MAAMgB,EAAWvB,EADL,IAAI,KAGhB,GAAIuB,GAAY,EAAG,CACf,cAAchB,CAAiB,EAC/Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEnB,EAAe,SAAW,GAC1B,MACH,CAED,MAAMsB,EAAiBX,EAAUU,CAAQ,EACzCF,EAAmBG,CAAc,CACpC,EAAE,GAAI,CACX,EAEAvB,EAAY,iBAAiB,QAAS,IAAM,CACnCD,IAILC,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1BoB,IACJ,CAAC,EAGD,MAAMG,EAAO,SAAS,cAAc,OAAO,EAC3CA,EAAK,iBAAiB,SAAWC,GAAU,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,SAASF,EAAK,SAAS,MAAM,KAAK,EAC1CG,EAAQH,EAAK,SAAS,MAAM,MAElCI,EAAcF,EAAOC,CAAK,EACrB,KAAKD,GAAS,CACXhB,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,0BAA0BgB,CAAK,IACxD,CAAa,CACb,CAAS,EACA,MAAMA,GAAS,CACZhB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,yBAAyBgB,CAAK,IACvD,CAAa,CACb,CAAS,CACT,CAAC,EAED,SAASE,EAAcF,EAAOC,EAAO,CACjC,OAAO,IAAI,QAAQ,CAACE,EAASC,IAAW,CACpC,WAAW,IAAM,CACTH,IAAU,YACVE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,CACL"}